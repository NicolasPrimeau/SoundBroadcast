import pyaudio # from http://people.csail.mit.edu/hubert/pyaudio/
import serial  # from http://pyserial.sourceforge.net/
import socket
import audioop
import sys
import math
import threading
import collections
import time

q = collections.deque()

def list_devices():
    # List all audio input devices
    p = pyaudio.PyAudio()
    i = 0
    n = p.get_device_count()
    while i < n:
        dev = p.get_device_info_by_index(i)
        if dev['maxInputChannels'] > 0:
            print (str(i)+'. '+dev['name'])
        i += 1
 
def broadcast_audio():
    chunk = 4096  # Change if too fast/slow, never less than 1024
    scale = 5   # Change if too dim/bright
    exponent = 1    # Change if too little/too much difference between loud and quiet sounds
 
    # CHANGE THIS TO CORRECT INPUT DEVICE
    # Enable stereo mixing in your sound card
    # to make you sound output an input
    # Use list_devices() to list all your input devices
    list_devices()
    #sys.exit()
    device = 1
    
    p = pyaudio.PyAudio()
    stream = p.open(format = pyaudio.paInt16,
                    channels = 1,
                    rate = 44100,
                    input = True,
                    frames_per_buffer = chunk,
                    input_device_index = device)
    
    print("Starting, use Ctrl+C to stop")


    send_to_server = threading.Thread(target=send_data)
    send_to_server.start()

    while(1):
        data = stream.read(chunk)
        q.append(data)


def send_data():
    UDP_IP = '192.168.0.149'
    UDP_PORT = 50051
    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    while 1:
        if len(q) >0:
            print("Sending data:" + str(q[0]))
            s.sendto(q.popleft(), (UDP_IP, UDP_PORT))


if __name__ == '__main__':
    #list_devices()
    broadcast_audio()